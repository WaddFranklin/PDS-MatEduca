import * as React from 'react';
import { createContext, useMemo } from 'react';

var defaults = {
    x: -10,
    y: -20,
    z: 30,
    minOpacity: 0.1,
    maxOpacity: 0.3,
    diffusion: 0.5,
    intensity: 0.5,
};
var LightContext = createContext(defaults);
function Light(_a) {
    var children = _a.children, _b = _a.x, x = _b === void 0 ? defaults.x : _b, _c = _a.y, y = _c === void 0 ? defaults.y : _c, _d = _a.z, z = _d === void 0 ? defaults.z : _d, _e = _a.minOpacity, minOpacity = _e === void 0 ? defaults.minOpacity : _e, _f = _a.maxOpacity, maxOpacity = _f === void 0 ? defaults.maxOpacity : _f, _g = _a.diffusion, diffusion = _g === void 0 ? defaults.diffusion : _g, _h = _a.intensity, intensity = _h === void 0 ? defaults.intensity : _h;
    var context = useMemo(function () { return ({ x: x, y: y, z: z, diffusion: diffusion, intensity: intensity, minOpacity: minOpacity, maxOpacity: maxOpacity }); }, [x, y, z, diffusion, intensity, minOpacity, maxOpacity]);
    return (React.createElement(LightContext.Provider, { value: context }, children));
}

export { Light, LightContext };
