{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4dc1692c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"subject-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ul\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.subjects, (subject, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"subject-item\",\n      key: index\n    }, _toDisplayString(subject[0].toUpperCase() + subject.slice(1, subject.length).toLowerCase()), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","subjects","subject","index","key","toUpperCase","slice","length","toLowerCase"],"sources":["/home/rodrigo/PDS-MatEduca/FrontVue/src/components/layout/Listsubjects.vue"],"sourcesContent":["<template>\n  <ul class=\"subject-list\">\n    <li class=\"subject-item\" v-for=\"(subject, index) in subjects\" :key=\"index\">{{ subject[0].toUpperCase() + subject.slice(1,subject.length).toLowerCase() }}</li>\n  </ul>\n</template>\n\n<script>\nexport default {\n    props: ['id'],\n    data(){\n        return{\n            subjects: '',\n            id: this.id\n        }\n    },\n    async mounted(){\n            let result = await this.$store.dispatch('getSpeciality');\n            let specialityNames = await this.$store.dispatch('getSpecialityNames');\n\n            let speciality_ids = []\n            let subjects_temp = []\n            if (result) {\n                for(let i = 0; i < result.data.length; i++)\n                {\n                    if (result.data[i]['usuario_id'] == this.id) {\n                        speciality_ids.push(result.data[i]['especialidade_id'])\n                    }\n                }\n\n                for(let i = 0; i < speciality_ids.length; i++)\n                {\n                    for(let j = 0; j < specialityNames.data.length; j++)\n                    {\n                        if(specialityNames.data[j]['id'] == speciality_ids[i]){\n                            subjects_temp.push(specialityNames.data[j]['descricao'])\n                        }\n                    }\n                }\n                this.subjects = subjects_temp\n            } else {\n                alert('Falha no login. Verifique suas credenciais.');\n            }\n        }\n}\n</script>\n\n<style scoped>\n    ul.subject-list{\n        list-style: none;\n        align-items: flex-start;\n        display: inline-flex;\n        width: 100%;\n    }\n    li.subject-item{\n        padding: 5px 0px;\n        border-radius: 4px;\n        align-items: flex-start;\n        margin-inline: 5px;\n        margin-bottom: 5px;\n        color: var(--highlight-600, #803900);\n        background: var(--highlight-50, #FFF8F2);\n        width: 90%;\n        display: flex;\n        flex-direction: row;\n        flex-wrap: wrap;\n\n        text-align: center;\n\n}\n</style>\n"],"mappings":";;;EACMA,KAAK,EAAC;AAAc;;uBAAxBC,mBAAA,CAEK,MAFLC,UAEK,I,kBADHD,mBAAA,CAA8JE,SAAA,QAAAC,WAAA,CAA1GC,KAAA,CAAAC,QAAQ,GAA3BC,OAAO,EAAEC,KAAK;yBAA/CP,mBAAA,CAA8J;MAA1JD,KAAK,EAAC,cAAc;MAAuCS,GAAG,EAAED;wBAAUD,OAAO,IAAIG,WAAW,KAAKH,OAAO,CAACI,KAAK,IAAGJ,OAAO,CAACK,MAAM,EAAEC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}