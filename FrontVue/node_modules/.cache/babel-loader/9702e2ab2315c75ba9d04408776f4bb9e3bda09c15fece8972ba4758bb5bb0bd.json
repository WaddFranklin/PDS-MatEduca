{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from 'vuex';\nexport default {\n  props: ['viewCardFunc', 'tutor'],\n  name: 'Etapas',\n  computed: {\n    ...mapGetters(['isAuthenticated', 'user'])\n  },\n  data() {\n    return {\n      usuarioAutenticado: false,\n      etapaAtual: 1,\n      diasSemana: [],\n      diaSelecionado: null,\n      currentTutor: {},\n      horarios: {\n        \"Seg\": [],\n        \"Ter\": [],\n        \"Qua\": [],\n        \"Qui\": [],\n        \"Sex\": [],\n        \"Sáb\": [],\n        \"Dom\": []\n      },\n      pesquisaAssunto: '',\n      areas: [{\n        nome: 'Álgebra',\n        assuntos: ['Equações do 1º grau', 'Equações do 2º grau', 'Sistema de Equações', 'Funções e Gráficos']\n      }, {\n        nome: 'Geometria',\n        assuntos: ['Geometria Plana e espacial', 'Geometria Analítica', 'Teorema de Pitágoras']\n      }\n      // Adicione mais áreas e assuntos conforme necessário\n      ],\n\n      assuntosSelecionados: [],\n      notasAssuntos: [],\n      maioresDificuldades: ''\n    };\n  },\n  async mounted() {\n    const user = JSON.parse(JSON.stringify(this.user));\n    this.currentTutor = JSON.parse(JSON.stringify(this.tutor));\n    let result = await this.$store.dispatch('getHorarios');\n    if (result) {\n      for (let i = 0; i < result.data.length; i++) {\n        if (result.data[i]['usuario_id'] == this.currentTutor['id']) {\n          const data = new Date(result.data[i]['data']);\n          let diaDaSemana = data.toLocaleDateString('pt-BR', {\n            weekday: 'long'\n          });\n          diaDaSemana = diaDaSemana.charAt(0).toUpperCase() + diaDaSemana.slice(1);\n          diaDaSemana = diaDaSemana.slice(0, 3);\n          if (!this.diasSemana.includes(diaDaSemana)) {\n            this.diasSemana.push(diaDaSemana);\n          }\n          this.horarios[diaDaSemana].push(result.data[i]['hora']);\n        }\n      }\n    } else {\n      alert('Falha no login. Verifique suas credenciais.');\n    }\n  },\n  methods: {\n    redirectToProfessor() {\n      this.viewCardFunc();\n    },\n    proximo() {\n      // Avança para a próxima etapa\n      this.etapaAtual++;\n    },\n    selecionarDia(dia) {\n      this.diaSelecionado = dia;\n    },\n    confirmarAgendamento() {\n      console.log('Agendamento confirmado:');\n    },\n    getHorarios() {}\n  }\n};","map":{"version":3,"names":["mapGetters","props","name","computed","data","usuarioAutenticado","etapaAtual","diasSemana","diaSelecionado","currentTutor","horarios","pesquisaAssunto","areas","nome","assuntos","assuntosSelecionados","notasAssuntos","maioresDificuldades","mounted","user","JSON","parse","stringify","tutor","result","$store","dispatch","i","length","Date","diaDaSemana","toLocaleDateString","weekday","charAt","toUpperCase","slice","includes","push","alert","methods","redirectToProfessor","viewCardFunc","proximo","selecionarDia","dia","confirmarAgendamento","console","log","getHorarios"],"sources":["/home/rodrigo/PDS-MatEduca/FrontVue/src/components/perfil_professor/Etapas.vue"],"sourcesContent":["<template>\n    <div v-if=\"this.isAuthenticated\" class=\"etapas\">\n        <div v-if=\"etapaAtual === 1\" class=\"etapa\">\n            <div class=\"cabecalho\">\n                <p class=\"titulo-etapa\">Agendar Aula</p>\n                <div class=\"informacoes\">\n                    <p class=\"nome-professor\">{{this.currentTutor['nome']}}</p>\n                    <p class=\"info-adicional\">Sessões de 1 hora aula (50 min)</p>\n                </div>\n            </div>\n            <div class=\"selecao-dias\">\n                <div v-for=\"dia in diasSemana\" :key=\"dia\" class=\"dia\" :class=\"{ 'selecionado': diaSelecionado === dia }\" @click=\"selecionarDia(dia)\">\n                    {{ dia }}\n                </div>\n            </div>\n            <div class=\"horarios\">\n                <div v-for=\"horario in horarios[this.diaSelecionado]\" :key=\"horario\" class=\"horario\">\n                    {{ horario }}\n                </div>\n            </div>\n            <button @click=\"redirectToProfessor\">Cancelar</button>\n            <button @click=\"proximo\" class=\"botao-proxima-etapa\">Próximo</button>\n        </div>\n\n        <div v-if=\"etapaAtual === 2\" class=\"etapa\">\n            <div class=\"cabecalho\">\n                <p class=\"titulo-etapa\">Agendar Aula</p>\n                <div class=\"informacoes\">\n                    <p class=\"nome-professor\">{{this.currentTutor['nome']}}</p>\n                    <p class=\"info-adicional\">Sessões de 1 hora aula (50 min)</p>\n                </div>\n                <p>Qual o assunto que deseja estudar?</p>\n                <p style=\"color: darkgrey\">Selecione todas as opções desejáveis</p>\n\n            </div>\n            <div class=\"assunto-selecao\">\n                <p>Selecione todas as opções desejáveis</p>\n                <input type=\"text\" placeholder=\"Pesquise por assunto\" v-model=\"pesquisaAssunto\" />\n                <div v-for=\"(area, index) in areas\" :key=\"index\">\n                    <p>{{ area.nome }}</p>\n                    <div class=\"linha-sutil\"></div>\n                    <div v-for=\"(assunto, aIndex) in area.assuntos\" :key=\"aIndex\" class=\"assunto\">\n                        <input type=\"checkbox\" v-model=\"assuntosSelecionados\" :value=\"assunto\" />\n                        <label>{{ assunto }}</label>\n                    </div>\n                </div>\n            </div>\n            <button @click=\"etapaAtual--\">Voltar</button>\n            <button @click=\"proximo\" class=\"botao-proxima-etapa\">Próximo</button>\n        </div>\n\n        <div v-if=\"etapaAtual === 3\" class=\"etapa\">\n        <div class=\"cabecalho\">\n            <p class=\"titulo-etapa\">Agendar Aula</p>\n            <div class=\"informacoes\">\n                <p class=\"nome-professor\">Juliana Ribeiro</p>\n                <p class=\"info-adicional\">Sessões de 1 hora aula (50 min)</p>\n            </div>\n        </div>\n        <div class=\"avaliacao-assuntos\">\n            <div v-for=\"(assunto, index) in assuntosSelecionados\" :key=\"index\">\n                <p>{{ assunto }}</p>\n                <div class=\"nota-assunto\">\n                    <span>Nota: </span>\n                    <input type=\"number\" v-model=\"notasAssuntos[index]\" min=\"1\" max=\"7\" />\n                </div>\n            </div>\n        </div>\n        <button @click=\"etapaAtual--\">Voltar</button>\n        <button @click=\"proximo\" class=\"botao-proxima-etapa\">Próximo</button>\n    </div>\n\n        <div v-if=\"etapaAtual === 4\" class=\"etapa\">\n            <div class=\"cabecalho\">\n                <p class=\"titulo-etapa\">Agendar Aula</p>\n                <div class=\"informacoes\">\n                    <p class=\"nome-professor\">Juliana Ribeiro</p>\n                    <p class=\"info-adicional\">Sessões de 1 hora aula (50 min)</p>\n                </div>\n            </div>\n            <div class=\"maiores-dificuldades\">\n                <textarea placeholder=\"Descreva suas maiores dificuldades nesse(s) assunto(s)\" v-model=\"maioresDificuldades\"></textarea>\n            </div>\n            <button @click=\"etapaAtual--\">Voltar</button>\n            <button @click=\"proximo\" class=\"botao-proxima-etapa\">Próximo</button>\n        </div>\n\n        <div v-if=\"etapaAtual === 5\" class=\"etapa\">\n            <div class=\"cabecalho\">\n                <p class=\"titulo-etapa\">Agendar Aula - Confirmação</p>\n                <div class=\"informacoes\">\n                    <p class=\"nome-professor\">Juliana Ribeiro</p>\n                    <p class=\"info-adicional\">Sessões de 1 hora aula (50 min)</p>\n                </div>\n            </div>\n            <div class=\"resumo-dados\">\n                <p><span>Assuntos Selecionados:</span> {{ assuntosSelecionados.join(', ') }}</p>\n                <p><span>Notas dos Assuntos:</span> {{ notasAssuntos.join(', ') }}</p>\n                <p><span>Maiores Dificuldades:</span> {{ maioresDificuldades }}</p>\n            </div>\n            <button @click=\"etapaAtual--\">Voltar</button>\n            <button @click=\"confirmarAgendamento\" class=\"botao-proxima-etapa\">Confirmar Agendamento</button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nexport default {\n    props: ['viewCardFunc', 'tutor'],\n    name: 'Etapas',\n    computed: {\n        ...mapGetters(['isAuthenticated', 'user']),\n    },\n    data() {\n        return {\n            usuarioAutenticado: false,\n            etapaAtual: 1,\n            diasSemana: [],\n            diaSelecionado: null,\n            currentTutor: {},\n            horarios: {\n                \"Seg\": [],\n                \"Ter\": [],\n                \"Qua\": [],\n                \"Qui\": [],\n                \"Sex\": [],\n                \"Sáb\": [],\n                \"Dom\": []\n            },\n            pesquisaAssunto: '',\n            areas: [\n                {\n                    nome: 'Álgebra',\n                    assuntos: ['Equações do 1º grau', 'Equações do 2º grau', 'Sistema de Equações', 'Funções e Gráficos']\n                },\n                {\n                    nome: 'Geometria',\n                    assuntos: ['Geometria Plana e espacial', 'Geometria Analítica', 'Teorema de Pitágoras']\n                },\n                // Adicione mais áreas e assuntos conforme necessário\n            ],\n            assuntosSelecionados: [],\n            notasAssuntos: [],\n            maioresDificuldades: '',\n\n        };\n    },\n    async mounted(){\n        const user = JSON.parse(JSON.stringify(this.user))\n        this.currentTutor = JSON.parse(JSON.stringify(this.tutor))\n\n        let result = await this.$store.dispatch('getHorarios');\n        if (result) {\n            for (let i = 0; i < result.data.length; i++){\n                if (result.data[i]['usuario_id'] == this.currentTutor['id']) {\n                    const data = new Date(result.data[i]['data']);\n                    let diaDaSemana = data.toLocaleDateString('pt-BR', { weekday: 'long' });\n                    diaDaSemana = diaDaSemana.charAt(0).toUpperCase() + diaDaSemana.slice(1)\n                    diaDaSemana = diaDaSemana.slice(0,3)\n\n                    if (!this.diasSemana.includes(diaDaSemana)) {\n                        this.diasSemana.push(diaDaSemana)\n                    }\n\n                    this.horarios[diaDaSemana].push(result.data[i]['hora'])\n                }\n            }\n        } else {\n            alert('Falha no login. Verifique suas credenciais.');\n        }\n    },\n    methods: {\n        redirectToProfessor() {\n            this.viewCardFunc()\n        },\n        proximo() {\n            // Avança para a próxima etapa\n            this.etapaAtual++;\n        },\n        selecionarDia(dia) {\n            this.diaSelecionado = dia;\n        },\n        confirmarAgendamento() {\n            console.log('Agendamento confirmado:');\n        },\n        getHorarios() {\n            \n        }\n    }\n};\n</script>\n\n<style scoped>\n.resumo-dados {\n    margin-top: 20px;\n}\n\n.resumo-dados p {\n    margin-bottom: 10px;\n}\n\n.resumo-dados p span {\n    font-weight: bold;\n}\n\n.maiores-dificuldades textarea {\n    width: 100%;\n    height: 100px;\n    padding: 10px;\n}\n\n.avaliacao-assuntos {\n    margin-top: 20px;\n}\n\n.avaliacao-assuntos p {\n    font-weight: bold;\n}\n\n.nota-assunto {\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n}\n\n.nota-assunto span {\n    margin-right: 10px;\n}\n\n.nota-assunto input {\n    width: 40px;\n    padding: 5px;\n}\n\n.assunto-selecao {\n    margin-top: 20px;\n}\n\n.assunto-selecao p {\n    color: grey;\n}\n\n.assunto-selecao input[type=\"text\"] {\n    width: 100%;\n    padding: 10px;\n    margin-bottom: 10px;\n}\n\n.assunto {\n    display: flex;\n    align-items: center;\n    margin-bottom: 5px;\n}\n\n.assunto label {\n    margin-left: 10px;\n}\n\n.linha-sutil {\n    border-top: 1px solid #ccc;\n    margin: 5px 0;\n}\n\n.etapas {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: white;\n    width: 70%;\n    max-width: 800px;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.cabecalho {\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n}\n\n.titulo-etapa {\n    color: #003773;;\n    font-size: 1.2em;\n    font-weight: bold;\n    margin-right: 10px;\n}\n\n.nome-professor {\n    font-weight: bold;\n}\n\n.info-adicional {\n    font-size: 0.8em;\n    color: grey;\n    margin-left: 10px;\n}\n\n.selecao-dias {\n    display: flex;\n    margin-bottom: 10px;\n}\n\n.dia {\n    flex: 1;\n    padding: 10px;\n    text-align: center;\n    cursor: pointer;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin-right: 5px;\n}\n\n.dia.selecionado {\n    background-color: #003773;;\n    color: white;\n}\n\n.horarios {\n    display: flex;\n    flex-direction: column;\n}\n\n.horario {\n    padding: 10px;\n    margin-bottom: 5px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n}\n\n.botao-proxima-etapa {\n    background-color: #003773;\n    color: white;\n    border: none;\n    padding: 10px 20px;\n    border-radius: 5px;\n    cursor: pointer;\n    float: right;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}