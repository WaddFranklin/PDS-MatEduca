{"ast":null,"code":"import Vue from 'vue';\nimport { toRaw } from \"vue\";\nimport Vuex from 'vuex';\nimport axios from 'axios';\nconst apiService = () => axios.create({\n  baseURL: 'http://127.0.0.1:8000/',\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    'content-type': 'multipart/form-data'\n  }\n});\nconst store = new Vuex.Store({\n  state: {\n    // Defina o estado inicial do login aqui, por exemplo:\n    isAuthenticated: false,\n    user: null\n  },\n  mutations: {\n    // Defina as mutações para alterar o estado de login\n    SET_AUTHENTICATED(state, isAuthenticated) {\n      state.isAuthenticated = isAuthenticated;\n    },\n    SET_USER(state, user) {\n      state.user = toRaw(user);\n    }\n  },\n  actions: {\n    // Defina as ações para interagir com o servidor (por exemplo, fazer login)\n    async loginUser({\n      commit\n    }, userData) {\n      try {\n        const response = await apiService().post('/api', userData);\n        if (response.status == 200) {\n          commit('SET_AUTHENTICATED', true);\n          commit('SET_USER', response.data);\n        } else {\n          commit('SET_AUTHENTICATED', false);\n          commit('SET_USER', null);\n        }\n      } catch (error) {\n        // Lidar com erros de login\n        commit('SET_AUTHENTICATED', false);\n        commit('SET_USER', null);\n        console.error(error);\n      }\n    },\n    async createTutor({\n      commit\n    }, tutorData) {\n      try {\n        const response = await apiService().post('/api/tutor', tutorData);\n        if (response.status == 200) {\n          return true;\n        } else {\n          return false;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getTutors({\n      commit\n    }) {\n      try {\n        const response = await apiService().get('/api/tutores');\n        if (response.status == 200) {\n          return response.data;\n        } else {\n          return undefined;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getSpeciality() {\n      try {\n        const response = await apiService().get('/api/especialidades');\n        if (response.status == 200) {\n          return response.data;\n        } else {\n          return undefined;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getSpecialityNames() {\n      try {\n        const response = await apiService().get('/api/especialidadesNomes');\n        if (response.status == 200) {\n          return response.data;\n        } else {\n          return undefined;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getImage(context, src) {\n      try {\n        const obj = {\n          url: src\n        };\n        const response = await apiService().post('/api/imagem/', obj);\n        if (response.status == 200) {\n          return response.data;\n        } else {\n          return undefined;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  getters: {\n    // Defina getters para acessar o estado de login\n    isAuthenticated: state => state.isAuthenticated,\n    user: state => state.user\n  }\n});\nexport default store;","map":{"version":3,"names":["Vue","toRaw","Vuex","axios","apiService","create","baseURL","headers","accept","store","Store","state","isAuthenticated","user","mutations","SET_AUTHENTICATED","SET_USER","actions","loginUser","commit","userData","response","post","status","data","error","console","createTutor","tutorData","getTutors","get","undefined","getSpeciality","getSpecialityNames","getImage","context","src","obj","url","getters"],"sources":["/home/rodrigo/PDS-MatEduca/FrontVue/src/components/store/store.js"],"sourcesContent":["import Vue from 'vue';\nimport { toRaw } from \"vue\";\nimport Vuex from 'vuex';\nimport axios from 'axios';\n\nconst apiService = () =>\naxios.create({\n  baseURL: 'http://127.0.0.1:8000/',\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    'content-type': 'multipart/form-data',\n  },\n});\n\n\nconst store = new Vuex.Store({\n  state: {\n        // Defina o estado inicial do login aqui, por exemplo:\n        isAuthenticated: false,\n        user: null,\n  },\n  mutations: {\n    // Defina as mutações para alterar o estado de login\n    SET_AUTHENTICATED(state, isAuthenticated) {\n        state.isAuthenticated = isAuthenticated;\n    },\n    SET_USER(state, user) {\n        state.user = toRaw(user);\n    },\n  },\n  actions: {\n    // Defina as ações para interagir com o servidor (por exemplo, fazer login)\n    async loginUser({ commit }, userData) {\n      try {\n        const response = await apiService().post('/api', userData);\n\n        if (response.status == 200) {\n            commit('SET_AUTHENTICATED', true);\n            commit('SET_USER', response.data);\n        } else {\n            commit('SET_AUTHENTICATED', false);\n            commit('SET_USER', null);\n        }\n      } catch (error) {\n            // Lidar com erros de login\n            commit('SET_AUTHENTICATED', false);\n            commit('SET_USER', null);\n            console.error(error);\n      }\n    },\n    async createTutor({ commit }, tutorData) {\n      try {\n        const response = await apiService().post('/api/tutor', tutorData);\n        if (response.status == 200) {\n          return true\n        } else {\n          return false\n        }\n      } catch (error) {\n            console.error(error);\n      }\n    },\n    async getTutors({commit}) {\n      try {\n        const response = await apiService().get('/api/tutores');\n\n        if (response.status == 200) {\n          return response.data\n        } else {\n          return undefined\n        }\n      } catch (error) {\n            console.error(error);\n      }\n    },\n    async getSpeciality() {\n      try {\n        const response = await apiService().get('/api/especialidades');\n\n        if (response.status == 200) {\n          return response.data\n        } else {\n          return undefined\n        }\n      } catch (error) {\n            console.error(error);\n      }\n    },\n\n    async getSpecialityNames() {\n      try {\n        const response = await apiService().get('/api/especialidadesNomes');\n\n        if (response.status == 200) {\n          return response.data\n        } else {\n          return undefined\n        }\n      } catch (error) {\n            console.error(error);\n      }\n    },\n\n    async getImage(context, src) {\n      try {\n        const obj = {\n          url: src\n        }\n        const response = await apiService().post('/api/imagem/', obj);\n        \n        if (response.status == 200) {\n          return response.data\n        } else {\n          return undefined\n        }\n      } catch (error) {\n            console.error(error);\n      }\n    }\n\n  },\n  getters: {\n        // Defina getters para acessar o estado de login\n        isAuthenticated: (state) => state.isAuthenticated,\n        user: (state) => state.user,\n  },\n});\n\nexport default store;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,SAASC,KAAK,QAAQ,KAAK;AAC3B,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAGA,CAAA,KACnBD,KAAK,CAACE,MAAM,CAAC;EACXC,OAAO,EAAE,wBAAwB;EACjCC,OAAO,EAAE;IACPC,MAAM,EAAE,kBAAkB;IAC1B,cAAc,EAAE,kBAAkB;IAClC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAGF,MAAMC,KAAK,GAAG,IAAIP,IAAI,CAACQ,KAAK,CAAC;EAC3BC,KAAK,EAAE;IACD;IACAC,eAAe,EAAE,KAAK;IACtBC,IAAI,EAAE;EACZ,CAAC;EACDC,SAAS,EAAE;IACT;IACAC,iBAAiBA,CAACJ,KAAK,EAAEC,eAAe,EAAE;MACtCD,KAAK,CAACC,eAAe,GAAGA,eAAe;IAC3C,CAAC;IACDI,QAAQA,CAACL,KAAK,EAAEE,IAAI,EAAE;MAClBF,KAAK,CAACE,IAAI,GAAGZ,KAAK,CAACY,IAAI,CAAC;IAC5B;EACF,CAAC;EACDI,OAAO,EAAE;IACP;IACA,MAAMC,SAASA,CAAC;MAAEC;IAAO,CAAC,EAAEC,QAAQ,EAAE;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,UAAU,CAAC,CAAC,CAACkB,IAAI,CAAC,MAAM,EAAEF,QAAQ,CAAC;QAE1D,IAAIC,QAAQ,CAACE,MAAM,IAAI,GAAG,EAAE;UACxBJ,MAAM,CAAC,mBAAmB,EAAE,IAAI,CAAC;UACjCA,MAAM,CAAC,UAAU,EAAEE,QAAQ,CAACG,IAAI,CAAC;QACrC,CAAC,MAAM;UACHL,MAAM,CAAC,mBAAmB,EAAE,KAAK,CAAC;UAClCA,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC;QAC5B;MACF,CAAC,CAAC,OAAOM,KAAK,EAAE;QACV;QACAN,MAAM,CAAC,mBAAmB,EAAE,KAAK,CAAC;QAClCA,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC;QACxBO,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MAC1B;IACF,CAAC;IACD,MAAME,WAAWA,CAAC;MAAER;IAAO,CAAC,EAAES,SAAS,EAAE;MACvC,IAAI;QACF,MAAMP,QAAQ,GAAG,MAAMjB,UAAU,CAAC,CAAC,CAACkB,IAAI,CAAC,YAAY,EAAEM,SAAS,CAAC;QACjE,IAAIP,QAAQ,CAACE,MAAM,IAAI,GAAG,EAAE;UAC1B,OAAO,IAAI;QACb,CAAC,MAAM;UACL,OAAO,KAAK;QACd;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACVC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MAC1B;IACF,CAAC;IACD,MAAMI,SAASA,CAAC;MAACV;IAAM,CAAC,EAAE;MACxB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMjB,UAAU,CAAC,CAAC,CAAC0B,GAAG,CAAC,cAAc,CAAC;QAEvD,IAAIT,QAAQ,CAACE,MAAM,IAAI,GAAG,EAAE;UAC1B,OAAOF,QAAQ,CAACG,IAAI;QACtB,CAAC,MAAM;UACL,OAAOO,SAAS;QAClB;MACF,CAAC,CAAC,OAAON,KAAK,EAAE;QACVC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MAC1B;IACF,CAAC;IACD,MAAMO,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMX,QAAQ,GAAG,MAAMjB,UAAU,CAAC,CAAC,CAAC0B,GAAG,CAAC,qBAAqB,CAAC;QAE9D,IAAIT,QAAQ,CAACE,MAAM,IAAI,GAAG,EAAE;UAC1B,OAAOF,QAAQ,CAACG,IAAI;QACtB,CAAC,MAAM;UACL,OAAOO,SAAS;QAClB;MACF,CAAC,CAAC,OAAON,KAAK,EAAE;QACVC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MAC1B;IACF,CAAC;IAED,MAAMQ,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMZ,QAAQ,GAAG,MAAMjB,UAAU,CAAC,CAAC,CAAC0B,GAAG,CAAC,0BAA0B,CAAC;QAEnE,IAAIT,QAAQ,CAACE,MAAM,IAAI,GAAG,EAAE;UAC1B,OAAOF,QAAQ,CAACG,IAAI;QACtB,CAAC,MAAM;UACL,OAAOO,SAAS;QAClB;MACF,CAAC,CAAC,OAAON,KAAK,EAAE;QACVC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MAC1B;IACF,CAAC;IAED,MAAMS,QAAQA,CAACC,OAAO,EAAEC,GAAG,EAAE;MAC3B,IAAI;QACF,MAAMC,GAAG,GAAG;UACVC,GAAG,EAAEF;QACP,CAAC;QACD,MAAMf,QAAQ,GAAG,MAAMjB,UAAU,CAAC,CAAC,CAACkB,IAAI,CAAC,cAAc,EAAEe,GAAG,CAAC;QAE7D,IAAIhB,QAAQ,CAACE,MAAM,IAAI,GAAG,EAAE;UAC1B,OAAOF,QAAQ,CAACG,IAAI;QACtB,CAAC,MAAM;UACL,OAAOO,SAAS;QAClB;MACF,CAAC,CAAC,OAAON,KAAK,EAAE;QACVC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MAC1B;IACF;EAEF,CAAC;EACDc,OAAO,EAAE;IACH;IACA3B,eAAe,EAAGD,KAAK,IAAKA,KAAK,CAACC,eAAe;IACjDC,IAAI,EAAGF,KAAK,IAAKA,KAAK,CAACE;EAC7B;AACF,CAAC,CAAC;AAEF,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}